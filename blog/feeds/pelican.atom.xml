<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Cycu.org - Pelican</title><link href="./" rel="alternate"></link><link href="./feeds/pelican.atom.xml" rel="self"></link><id>./</id><updated>2022-06-21T09:42:25+08:00</updated><entry><title>cycuorg blogger 與 Pelican 網誌</title><link href="./2022-cycuorg-blogger-and--pelican-blog.html" rel="alternate"></link><published>2022-03-12T11:11:00+08:00</published><updated>2022-06-21T09:42:25+08:00</updated><author><name>yen</name></author><id>tag:None,2022-03-12:./2022-cycuorg-blogger-and--pelican-blog.html</id><summary type="html">&lt;p&gt;以下的這些瑣碎紀錄源自 2004 年公開推出的 Gmail 與 2006 年推出的 Google Apps for Your Domain (也就是之後的 G Suite 以及現在的 &lt;a href="https://workspace.google.com/"&gt;Google Workspace&lt;/a&gt;).&lt;/p&gt;
</summary><content type="html">&lt;p&gt;以下的這些瑣碎紀錄源自 2004 年公開推出的 Gmail 與 2006 年推出的 Google Apps for Your Domain (也就是之後的 G Suite 以及現在的 &lt;a href="https://workspace.google.com/"&gt;Google Workspace&lt;/a&gt;).&lt;/p&gt;


&lt;p&gt;因為 cycu.org 就是在當時申請帳號時建立的. 從 &lt;a href="https://web.archive.org"&gt;Wayback Machine&lt;/a&gt; 還能發現, 最早的紀錄是 &lt;a href="https://web.archive.org/web/20031220081545/http://www.cycu.org/"&gt;2003 年 12 月&lt;/a&gt;, 採用 Xoops 在 Apache 1.3.28 版的 WWW 伺服器所建立的網站. 使用的電子郵件系統就是 Gmail.&lt;/p&gt;
&lt;p&gt;現在的 &lt;a href="https://cycuorg.blogspot.com"&gt;cycuorg blogger&lt;/a&gt; 是採用 yen 在 cycu dot org 網域中的帳號所建立, 主要內容來自 &lt;a href="https://cycu.org"&gt;CYCU&lt;/a&gt;. &lt;a href="https://workspace.google.com/"&gt;Google Workspace&lt;/a&gt; 只負責 Gmail 帳號的設置. Blogger 與 &lt;a href="https://blog.getpelican.com/"&gt;Pelican Blog&lt;/a&gt; 彼此保持內容同步. Youtube 影片則透過 yencycuorg 在 Gmail 的 &lt;a href="https://www.youtube.com/channel/UCOJQSG4KAaKMKK82dEFnLsw"&gt;channel&lt;/a&gt; 上傳. 而 &lt;a href="https://cycu.org"&gt;CYCU&lt;/a&gt; 使用 Github Pages 建立, 綁定的帳號為 cycuorg. &lt;/p&gt;
&lt;h2&gt;Blogger Python API&lt;/h2&gt;
&lt;p&gt;Goggle cloud apis 網站位於 &lt;a href="https://console.cloud.google.com/apis/"&gt;https://console.cloud.google.com/apis/&lt;/a&gt;, 若要透過 Python 程式建立 Blogger 網誌, &lt;/p&gt;
&lt;p&gt;Credential 選擇 OAuth 2.0 Client IDs 
type: Desktop
secrets 格式: json
必須透過下列程式轉為 token, 才能為 google-api-python-client 模組使用&lt;/p&gt;
&lt;pre class="brush:jscript"&gt;
# get secrets: https://console.developers.google.com
# https://developers.google.com/blogger/docs/3.0/using
# pip install google_auth_oauthlib
# under Mac command + b to execute
import pickle
import os
from googleapiclient.discovery import build
from google_auth_oauthlib.flow import InstalledAppFlow
from google.auth.transport.requests import Request


SCOPES = ['https://www.googleapis.com/auth/blogger', ]

# we check if the file tBo store the credentials exists
if not os.path.exists('./../../yen_cycu_blogger_token.dat'):

    flow = InstalledAppFlow.from_client_secrets_file('./../../yen_cycu_blogger_secrets.json', SCOPES)
    credentials = flow.run_local_server()

    with open('yen_cycu_blogger_token.dat', 'wb') as credentials_dat:
        pickle.dump(credentials, credentials_dat)
else:
    with open('yen_cycu_blogger_token.dat', 'rb') as credentials_dat:
        credentials = pickle.load(credentials_dat)
service = build('blogger', 'v3', credentials=credentials)
g.es(service)

已經將 .json 轉為 token.dat 後, 可以 pickle.load() 取出 credentials, 然後利用 service = build('blogger', 'v3', credentials=credentials) 得到
blogger service 物件.

from markdown import markdown
from oauth2client import client
# pip install oauth2client
import os
# 配合使用 credential token
import pickle
from googleapiclient.discovery import build
# pip install google-api-python-client

os.environ['TZ'] = 'Asia/Taipei'
with open('./../../yen_cycu_blogger_token.dat', 'rb') as credentials_dat:
    credentials = pickle.load(credentials_dat)
service = build('blogger', 'v3', credentials=credentials)
blogs = service.blogs()
# 取得使用者所建立網誌名稱
blogs = blogs.listByUser(userId='self').execute()
# post_id is now blogs["items"][0]["id"]
#blog_id = blogs["items"][0]["id"]
# cycuorg.blogspot.com 的 blog_id
blog_id = "7614197805383305517"
#for blog in blogs['items']:
    #print(blog['name'], blog['url'])
posts = service.posts()
&lt;/pre&gt;</content><category term="Pelican"></category><category term="cycu-org"></category></entry></feed>